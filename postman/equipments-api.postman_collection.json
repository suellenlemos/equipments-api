{
	"info": {
		"name": "equipments-api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "USER",
			"item": [
				{
					"name": "register user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"teste@teste.com\",\n    \"password\": \"Teste*123\",\n    \"fullname\": \"Suellen Lemos\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/register",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"register"
							]
						},
						"description": "This is a POST request to register a new user in database."
					},
					"response": []
				},
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"suellen@teste.com\",\n    \"password\": \"Teste*123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/login",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"login"
							]
						},
						"description": "This is a POST request to log in an user."
					},
					"response": []
				},
				{
					"name": "validate token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/validatetoken",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"validatetoken"
							]
						},
						"description": "This is a POST request to check if token is valid."
					},
					"response": []
				}
			]
		},
		{
			"name": "Get products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{localhost}}/equipment?column_name=equipmentId",
					"host": [
						"{{localhost}}"
					],
					"path": [
						"equipment"
					],
					"query": [
						{
							"key": "page",
							"value": "1",
							"disabled": true
						},
						{
							"key": "per_page",
							"value": "10",
							"disabled": true
						},
						{
							"key": "column_name",
							"value": "equipmentId"
						},
						{
							"key": "equipmentId",
							"value": "EQ-3",
							"disabled": true
						}
					]
				},
				"description": "This is a GET request and it is used to \"get\" the equipments list."
			},
			"response": []
		},
		{
			"name": "Post data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"equipmentId\": \"EQ-1\",\n    \"value\": 33.67\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{localhost}}/equipment",
					"host": [
						"{{localhost}}"
					],
					"path": [
						"equipment"
					]
				},
				"description": "This is a POST request to create a new equipment or update the value field of an existing equipment."
			},
			"response": []
		},
		{
			"name": "upload file",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": ""
						}
					]
				},
				"url": {
					"raw": "{{localhost}}/equipment/upload",
					"host": [
						"{{localhost}}"
					],
					"path": [
						"equipment",
						"upload"
					]
				},
				"description": "This is a POST request to upload equipments csv file."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}